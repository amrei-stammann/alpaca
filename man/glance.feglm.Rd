% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/broom.R
\name{glance.feglm}
\alias{glance.feglm}
\title{Glance at a(n) feglm object}
\usage{
\method{glance}{feglm}(x, ...)
}
\arguments{
\item{x}{A `feglm` object returned from [alpaca::feglm()].}

\item{...}{Additional arguments. Not used. Needed to match generic
signature only. **Cautionary note:** Misspelled arguments will be
absorbed in `...`, where they will be ignored. If the misspelled
argument has a default value, the default value will be used.
For example, if you pass `conf.lvel = 0.9`, all computation will
proceed using `conf.level = 0.95`. Additionally, if you pass
`newdata = my_tibble` to an [augment()] method that does not
accept a `newdata` argument, it will use the default value for
the `data` argument.}
}
\value{
A one-row [tibble::tibble] with columns:

  \item{null.deviance}{Null deviance of the model.}
  \item{deviance}{Deviance of the model.}
  \item{nobs}{Number of observations of the model.}
}
\description{
Glance accepts a model object and returns a
  [tibble::tibble()] with exactly one row of model summaries.
  The summaries are typically goodness of fit measures,
  p-values for hypothesis tests on residuals, or model
  convergence information.

  Glance never returns information from the original call to
  the modelling function. This includes the name of the
  modelling function or any arguments passed to the modelling
  function.

  Glance does not calculate summary measures. Rather, it farms
  out these computations to appropriate methods and gathers
  the results together. Sometimes a goodness of fit measure
  will be undefined. In these cases the measure will be
  reported as `NA`.
}
\examples{

library(alpaca)

dt <- simGLM(n = 40, t = 10, seed = 123, model = "poisson")

res_feglm <- feglm(formula = y ~ x1 + x2 + x3 | i + t,
                   data = dt, family = poisson())
res_feglm
tidy(res_feglm)
tidy(res_feglm, type = "sandwich")
tidy(res_feglm, type = "clustered", cluster = ~ i + t)
augment(res_feglm)
glance(res_feglm)

}
