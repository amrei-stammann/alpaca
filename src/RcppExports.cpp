// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CenterVariables
arma::mat CenterVariables(const arma::mat& V, const arma::vec& w, const Rcpp::List& klist, const double tol);
RcppExport SEXP _alpaca_CenterVariables(SEXP VSEXP, SEXP wSEXP, SEXP klistSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type klist(klistSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(CenterVariables(V, w, klist, tol));
    return rcpp_result_gen;
END_RCPP
}
// GetAlpha
arma::field<arma::vec> GetAlpha(const arma::vec& pi, const Rcpp::List& klist, const double tol);
RcppExport SEXP _alpaca_GetAlpha(SEXP piSEXP, SEXP klistSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type pi(piSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type klist(klistSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(GetAlpha(pi, klist, tol));
    return rcpp_result_gen;
END_RCPP
}
// GroupSums
arma::vec GroupSums(const arma::mat& M, const arma::vec& w, const Rcpp::List& jlist);
RcppExport SEXP _alpaca_GroupSums(SEXP MSEXP, SEXP wSEXP, SEXP jlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type jlist(jlistSEXP);
    rcpp_result_gen = Rcpp::wrap(GroupSums(M, w, jlist));
    return rcpp_result_gen;
END_RCPP
}
// GroupSumsSpectral
arma::vec GroupSumsSpectral(const arma::mat& M, const arma::vec& v, const arma::vec& w, const int L, const Rcpp::List& jlist);
RcppExport SEXP _alpaca_GroupSumsSpectral(SEXP MSEXP, SEXP vSEXP, SEXP wSEXP, SEXP LSEXP, SEXP jlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type v(vSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const int >::type L(LSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type jlist(jlistSEXP);
    rcpp_result_gen = Rcpp::wrap(GroupSumsSpectral(M, v, w, L, jlist));
    return rcpp_result_gen;
END_RCPP
}
// GroupSumsVar
arma::mat GroupSumsVar(const arma::mat& M, const Rcpp::List& jlist);
RcppExport SEXP _alpaca_GroupSumsVar(SEXP MSEXP, SEXP jlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type jlist(jlistSEXP);
    rcpp_result_gen = Rcpp::wrap(GroupSumsVar(M, jlist));
    return rcpp_result_gen;
END_RCPP
}
// GroupSumsCov
arma::mat GroupSumsCov(const arma::mat& M, const arma::mat& N, const Rcpp::List& jlist);
RcppExport SEXP _alpaca_GroupSumsCov(SEXP MSEXP, SEXP NSEXP, SEXP jlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type N(NSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type jlist(jlistSEXP);
    rcpp_result_gen = Rcpp::wrap(GroupSumsCov(M, N, jlist));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_alpaca_CenterVariables", (DL_FUNC) &_alpaca_CenterVariables, 4},
    {"_alpaca_GetAlpha", (DL_FUNC) &_alpaca_GetAlpha, 3},
    {"_alpaca_GroupSums", (DL_FUNC) &_alpaca_GroupSums, 3},
    {"_alpaca_GroupSumsSpectral", (DL_FUNC) &_alpaca_GroupSumsSpectral, 5},
    {"_alpaca_GroupSumsVar", (DL_FUNC) &_alpaca_GroupSumsVar, 2},
    {"_alpaca_GroupSumsCov", (DL_FUNC) &_alpaca_GroupSumsCov, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_alpaca(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
