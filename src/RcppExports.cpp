// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// GetAlpha
arma::vec GetAlpha(const arma::vec& kD_alpha, const arma::ivec& klvls_k, const arma::imat& kA, const arma::imat& kB, const double ktol);
RcppExport SEXP _alpaca_GetAlpha(SEXP kD_alphaSEXP, SEXP klvls_kSEXP, SEXP kASEXP, SEXP kBSEXP, SEXP ktolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type kD_alpha(kD_alphaSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type klvls_k(klvls_kSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type kA(kASEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type kB(kBSEXP);
    Rcpp::traits::input_parameter< const double >::type ktol(ktolSEXP);
    rcpp_result_gen = Rcpp::wrap(GetAlpha(kD_alpha, klvls_k, kA, kB, ktol));
    return rcpp_result_gen;
END_RCPP
}
// PseudoDemeaning
arma::mat PseudoDemeaning(const arma::mat& kV, const arma::vec& kw, const arma::imat& kA, const arma::imat& kB, const arma::ivec& klvls_k, const double ktol);
RcppExport SEXP _alpaca_PseudoDemeaning(SEXP kVSEXP, SEXP kwSEXP, SEXP kASEXP, SEXP kBSEXP, SEXP klvls_kSEXP, SEXP ktolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type kV(kVSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type kw(kwSEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type kA(kASEXP);
    Rcpp::traits::input_parameter< const arma::imat& >::type kB(kBSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type klvls_k(klvls_kSEXP);
    Rcpp::traits::input_parameter< const double >::type ktol(ktolSEXP);
    rcpp_result_gen = Rcpp::wrap(PseudoDemeaning(kV, kw, kA, kB, klvls_k, ktol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_alpaca_GetAlpha", (DL_FUNC) &_alpaca_GetAlpha, 5},
    {"_alpaca_PseudoDemeaning", (DL_FUNC) &_alpaca_PseudoDemeaning, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_alpaca(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
